Source: nicy
Maintainer: Debian Go Packaging Team <team+pkg-go@tracker.debian.org>
Uploaders: David GUADALUPE <guadalupe.david@gmail.com>
Section: golang
Testsuite: autopkgtest-pkg-go
Priority: optional
Build-Depends: debhelper-compat (= 13),
               dh-golang,
               golang-any,
               golang-github-google-shlex-dev,
               golang-github-mitchellh-go-homedir-dev,
               golang-github-spf13-cobra-dev,
               golang-github-spf13-pflag-dev,
               golang-github-spf13-viper-dev,
               golang-golang-x-sys-dev
Standards-Version: 4.6.0
Vcs-Browser: https://salsa.debian.org/go-team/packages/nicy
Vcs-Git: https://salsa.debian.org/go-team/packages/nicy.git
Homepage: https://github.com/canalguada/nicy
Rules-Requires-Root: no
XS-Go-Import-Path: github.com/canalguada/nicy

Package: nicy
Architecture: any
Depends: ${misc:Depends},
         ${shlibs:Depends}
Built-Using: ${misc:Built-Using}
Description: control processes execution environment and available resources
 nicy can be used to ease the control upon the execution environment of the
 managed processes and to configure the resources available to them: with 
 renice, can alter their scheduling priority; with chrt, can set their 
 real-time scheduling attributes and with ionice their I/O scheduling class
 and priority; with choom, can adjust their Out-Of-Memory killer score 
 setting.
 .
 It can create and start a transient systemd scope unit and either run
 the specified command and its spawned processes in it with systemd-run, or
 move yet running processes inside it.
 .
 When used to launch commands, nicy can also automatically change some
 environment variables and add command arguments.
 .
 The processes are managed by nicy applying them generic or specific presets
 stored in JSON format.
